1648104966
ijeqzL8hUX%3A15754761722e77ca1ba1ca3f3965e433-8a9b1914d4590f9ceb28a3dd31efb055
s:80556:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"8a9b1914d4590f9ceb28a3dd31efb055";s:39:" phpDocumentor\Reflection\Php\File name";s:14:"PessoaTest.php";s:39:" phpDocumentor\Reflection\Php\File path";s:20:"tests/PessoaTest.php";s:41:" phpDocumentor\Reflection\Php\File source";s:26784:"<?php

namespace Uspdev\Replicado\Tests;

use PHPUnit\Framework\TestCase;
use Uspdev\Replicado\Pessoa;
use Uspdev\Replicado\Uteis;
use Uspdev\Replicado\DB;

class PessoaTest extends TestCase
{
    public function test_nomeCompleto(){
        # Limpando Tabela
        DB::getInstance()->exec('DELETE FROM PESSOA');

        $sql = file_get_contents(__DIR__ .'/data/'.'PessoaTest.test_nomeCompleto.sql');
        
        DB::getInstance()->exec($sql);
        $this->assertSame('Fulano da Silva',Pessoa::nomeCompleto(123456));
    }

    public function test_obterCodpesPorEmail(){
        DB::getInstance()->exec('DELETE FROM EMAILPESSOA');
        $sql = file_get_contents(__DIR__ .'/data/'.'PessoaTest.test_obterCodpesPorEmail.sql');
        DB::getInstance()->exec($sql);
        $this->assertSame('123456',Pessoa::obterCodpesPorEmail('fulano@usp.br'));
    }

    public function test_verificarEstagioUSP(){
        DB::getInstance()->prepare('DELETE FROM LOCALIZAPESSOA')->execute();

        $sql = "INSERT INTO LOCALIZAPESSOA (codpes, tipvin, codfncetr) 
                    VALUES (convert(int,:codpes),:tipvin,convert(int,:codfncetr))";

        $data = [
            'codpes' => 123456,
            'tipvin' => 'ESTAGIARIORH',
            'codfncetr' => 0
        ];
        DB::getInstance()->prepare($sql)->execute($data);
        $this->assertTrue(Pessoa::verificarEstagioUSP(123456));
    }

    public function test_email(){
        DB::getInstance()->prepare('DELETE FROM EMAILPESSOA')->execute();

        $sql = "INSERT INTO EMAILPESSOA (codpes, stamtr, codema) 
                    VALUES (convert(int,:codpes),:stamtr,:codema)";

        $data = [
            'codpes' => 123456,
            'stamtr' => 'S',
            'codema' => 'fulana@usp.br'
        ];
        DB::getInstance()->prepare($sql)->execute($data);
        $this->assertSame('fulana@usp.br',Pessoa::email('123456'));
    }

    public function test_emailusp(){
        DB::getInstance()->prepare('DELETE FROM EMAILPESSOA')->execute();

        $sql = "INSERT INTO EMAILPESSOA (codpes, stausp, codema) 
                    VALUES (convert(int,:codpes),:stausp,:codema)";

        $data = [
            'codpes' => 123456,
            'stausp' => 'S',
            'codema' => 'fulana@usp.br'
        ];
        DB::getInstance()->prepare($sql)->execute($data);
        $this->assertSame('fulana@usp.br',Pessoa::emailusp('123456'));
    }

    public function test_emails(){
        DB::getInstance()->prepare('DELETE FROM EMAILPESSOA')->execute();

        $sql = "INSERT INTO EMAILPESSOA (codpes, codema) 
                VALUES (convert(int,:codpes),:codema)";

        $data = [
            'codpes' => 123456,
            'codema' => 'fulana@usp.br'
        ];
        DB::getInstance()->prepare($sql)->execute($data);
        $output = Pessoa::emails(123456);
        $this->assertIsArray($output);
        $this->assertSame('fulana@usp.br',$output[0]);
    }

    public function test_telefones(){
        DB::getInstance()->prepare('DELETE FROM TELEFPESSOA')->execute();

        $sql = "INSERT INTO TELEFPESSOA (codpes, codddd, numtel) 
                VALUES (
                    convert(int,:codpes),
                    :codddd,
                    :numtel
                )";

        $data = [
            'codpes' => 123456,
            'codddd' => 11,
            'numtel' => 954668532 
        ];
        DB::getInstance()->prepare($sql)->execute($data);
        $this->assertSame('(11) 954668532',Pessoa::telefones(123456)[0]);
    }

    public function test_nome()
    {
        DB::getInstance()->prepare('DELETE FROM PESSOA')->execute();

        $sql = "INSERT INTO PESSOA (codpes, nompes, nompesttd, dtanas) 
                VALUES (
                    convert(int,:codpes), 
                    :nompes, 
                    :nompesttd, 
                    :dtanas
                )";                         
        $data = [
            'codpes' => 22222,
            'nompes' => 'Hogwarts',
            'nompesttd' => 'Hogwarts',
            'dtanas' => '2018-10-06 00:00:00'
        ];
        DB::getInstance()->prepare($sql)->execute($data);

        $this->assertSame('22222',Pessoa::nome('Hogwarts')[0]['codpes']);
        $this->assertSame([],Pessoa::nome('Ninguém'));
    }

    public function test_nomeFonetico()
    {
        DB::getInstance()->prepare('DELETE FROM PESSOA')->execute();

        $sql = "INSERT INTO PESSOA (codpes, nompes, nompesttd, nompesfon, dtanas) 
                VALUES (
                    convert(int,:codpes), 
                    :nompes, 
                    :nompesttd, 
                    :nompesfon, 
                    :dtanas
                )";                         
        $data = [
            'codpes' => 22222,
            'nompes' => 'João Batista',
            'nompesttd' => 'João Batista',
            'nompesfon' => Uteis::fonetico('João Batista'),
            'dtanas' => '2011-10-06 00:00:00'
        ];
        DB::getInstance()->prepare($sql)->execute($data);

        $this->assertSame('22222',Pessoa::nomeFonetico('joao')[0]['codpes']);
        $this->assertSame([],Pessoa::nomeFonetico('Ninguém'));
    }

    public function test_procurarPorNome() 
    {
        # cleanup
        DB::getInstance()->prepare('DELETE FROM PESSOA')->execute();
        DB::getInstance()->prepare('DELETE FROM LOCALIZAPESSOA')->execute();

        # 1st person
        $sql = "INSERT INTO PESSOA (codpes, nompes, nompesttd, nompesfon, dtanas) 
                VALUES (
                    convert(int,:codpes), 
                    :nompes, 
                    :nompesttd, 
                    :nompesfon, 
                    :dtanas
                )";                         
        $data = [
            'codpes' => 123456,
            'nompes' => 'Hogwarts da Silva',
            'nompesttd' => 'Hogwarts da Silva',
            'nompesfon' => Uteis::fonetico('Hogwarts da Silva'),
            'dtanas' => '2018-08-06 00:00:00'
        ];
        DB::getInstance()->prepare($sql)->execute($data);

        # 2nd person
        $data = [
            'codpes' => 78910,
            'nompes' => 'Maria Joaquina Belém',
            'nompesttd' => 'Maria Joaquina Belém',
            'nompesfon' => Uteis::fonetico('Maria Joaquina Belém'),
            'dtanas' => '2017-05-06 00:00:00'
        ];
        DB::getInstance()->prepare($sql)->execute($data);

        $sql = "INSERT INTO LOCALIZAPESSOA (codpes, codfncetr) 
                VALUES (convert(int,:codpes),convert(int,:codfncetr))";

        $data = ['codpes' => 123456, 'codfncetr' => 0];
        DB::getInstance()->prepare($sql)->execute($data);

        $data = ['codpes' => 78910, 'codfncetr' => 0];
        DB::getInstance()->prepare($sql)->execute($data);

        # assert sem parametros opcionais (true, true)
        $this->assertSame('78910', Pessoa::procurarPorNome('Belém')[0]['codpes']);

        # alguns asserts que são vazios
        $this->assertSame([], Pessoa::procurarPorNome('Ninguém', false, true));
        $this->assertSame([], Pessoa::procurarPorNome('Ninguém', true, false));
        $this->assertSame([], Pessoa::procurarPorNome('Ninguém', false, false));

        # aqui deveria retornar a pessoa, mas está retornando vazio
        #echo 'dump '; var_dump(Pessoa::procurarPorNome('Belém', false, false));
        #$this->assertSame('78910', Pessoa::procurarPorNome('Belém', false, false)[0]['codpes']);
        
        # procurando sem fonetico
        $this->assertSame('123456', Pessoa::procurarPorNome('Hogwarts', false, false)[0]['codpes']);
        $this->assertSame('78910', Pessoa::procurarPorNome('Joaquina', false, false)[0]['codpes']);
    }

    public function test_obterRamalUsp(){
        DB::getInstance()->prepare('DELETE FROM LOCALIZAPESSOA')->execute();

        $sql = "INSERT INTO LOCALIZAPESSOA (codpes, numtelfmt, codfncetr) 
                VALUES (
                    convert(int,:codpes),
                    :numtelfmt,
                    convert(int,:codfncetr)
                )";

        $data = [
            'codpes' => 123456,
            'numtelfmt' => 954668532,
            'codfncetr' => 0 
        ];
        DB::getInstance()->prepare($sql)->execute($data);
        $this->assertSame('954668532',Pessoa::obterRamalUsp(123456));
        $this->assertSame('',Pessoa::obterRamalUsp(111111));
    }
    
    public function test_vinculos(){
        DB::getInstance()->prepare('DELETE FROM LOCALIZAPESSOA')->execute();

        $sql = "INSERT INTO LOCALIZAPESSOA (codpes, codundclg, tipvinext, nomfnc, nomset, sglclgund, codfncetr) 
                VALUES (
                    convert(int,:codpes),
                    convert(int,:codundclg),
                    :tipvinext,
                    :nomfnc,
                    :nomset,
                    :sglclgund,
                    convert(int,:codfncetr)
                )";

        $data = [
            'codpes' => 123456,
            'codundclg' => 8,
            'tipvinext' => 'Estagiário',
            'nomfnc' => 'Estagiário',
            'nomset' => 'Diretoria Faculdade de Filosofia, Letras e Ciências Humanas',
            'sglclgund' => 'CG',
            'codfncetr' => 0
        ];
        DB::getInstance()->prepare($sql)->execute($data);
        $this->assertSame("Estagiário - Estagiário - Diretoria Faculdade de Filosofia, Letras e Ciências Humanas - CG",Pessoa::vinculos(123456)[0]);
    }

    public function test_vinculosSiglas(){
        DB::getInstance()->prepare('DELETE FROM LOCALIZAPESSOA')->execute();

        $sql = "INSERT INTO LOCALIZAPESSOA (codpes, sitatl, codundclg, tipvin, codfncetr) 
                VALUES (
                    convert(int,:codpes),
                    :sitatl,
                    convert(int,:codundclg),
                    :tipvin,
                    convert(int,:codfncetr)
                )";

        $data = [
            'codpes' => 123456,
            'sitatl' => 'A',
            'codundclg' => 8,
            'tipvin' => 'ALUNOGR',
            'codfncetr' => 0
        ];
        DB::getInstance()->prepare($sql)->execute($data);
        $this->assertSame('ALUNOGR',Pessoa::vinculosSiglas(123456,8)[0]);
    }

    public function test_contarEstagiariosAtivosPorGenero(){
        DB::getInstance()->prepare('DELETE FROM LOCALIZAPESSOA')->execute();
        DB::getInstance()->prepare('DELETE FROM PESSOA')->execute();

        $sql = "INSERT INTO LOCALIZAPESSOA (codpes, tipvin, codundclg, codfncetr) VALUES 
                                   (convert(int,:codpes),:tipvin,convert(int,:codundclg),convert(int,:codfncetr))";

        $data = [
            'codpes' => 145368,
            'tipvin' => 'ESTAGIARIORH',
            'codundclg' => 8,
            'codfncetr' => 0
        ];
        DB::getInstance()->prepare($sql)->execute($data);

        $sql = "INSERT INTO PESSOA (codpes, sexpes, dtanas) 
                VALUES (
                    convert(int,:codpes),
                    :sexpes,
                    :dtanas
                )";

        $data = [
            'codpes' => 145368,
            'sexpes' => 'F',
            'dtanas' => '2018-06-04 00:00:00'
        ];
        DB::getInstance()->prepare($sql)->execute($data);
        $this->assertSame('0',Pessoa::contarEstagiariosAtivosPorGenero('F'));        
    }

    public function test_contarServidoresAtivosPorGenero(){
        DB::getInstance()->prepare('DELETE FROM LOCALIZAPESSOA')->execute();
        DB::getInstance()->prepare('DELETE FROM PESSOA')->execute();

        $sql = "INSERT INTO LOCALIZAPESSOA (codpes, tipvinext, codundclg, codfncetr) VALUES 
                                   (convert(int,:codpes),:tipvinext,convert(int,:codundclg),convert(int,:codfncetr))";

        $data = [
            'codpes' => 1234567,
            'tipvinext' => 'Servidor',
            'codundclg' => 8,
            'codfncetr' => 0
        ];
        DB::getInstance()->prepare($sql)->execute($data);

        $sql = "INSERT INTO PESSOA (codpes, sexpes, dtanas) 
                VALUES (
                    convert(int,:codpes),
                    :sexpes,
                    :dtanas
                )";

        $data = [
            'codpes' => 1234567,
            'sexpes' => 'F',
            'dtanas' => '2007-10-05 00:00:00'
        ];
        DB::getInstance()->prepare($sql)->execute($data);
        $this->assertSame('0',Pessoa::contarServidoresAtivosPorGenero('F'));        
    }

    public function test_totalPosNivelPrograma(){
        DB::getInstance()->prepare('DELETE FROM LOCALIZAPESSOA')->execute();
        DB::getInstance()->prepare('DELETE FROM VINCULOPESSOAUSP')->execute();

        $sql = "INSERT INTO LOCALIZAPESSOA (codpes, tipvin, codundclg, sitatl, codfncetr) 
                VALUES (
                    convert(int,:codpes),
                    :tipvin,
                    convert(int,:codundclg),
                    :sitatl,
                    convert(int,:codfncetr)
                )";                         

        $data = [
            'codpes' => 12345,
            'tipvin' => 'ALUNOPOS',
            'codundclg' => 8,
            'sitatl' => 'A',
            'codfncetr' => 0
        ];
        DB::getInstance()->prepare($sql)->execute($data);

        $sql = "INSERT INTO VINCULOPESSOAUSP (codpes, tipvin, nivpgm) 
                VALUES (
                    convert(int,:codpes),
                    :tipvin,
                    :nivpgm
                )";                         

        $data = [
            'codpes' => 12345,
            'tipvin' => 'ALUNOPOS',
            'nivpgm' => 'ME'
        ];
        DB::getInstance()->prepare($sql)->execute($data);
        $this->assertSame('0',Pessoa::totalPosNivelPrograma('ME', 8));
    }

    public function test_obterEndereco(){
        DB::getInstance()->prepare('DELETE FROM ENDPESSOA')->execute();
        DB::getInstance()->prepare('DELETE FROM LOCALIDADE')->execute();
        DB::getInstance()->prepare('DELETE FROM TIPOLOGRADOURO')->execute();

        $sql = "INSERT INTO ENDPESSOA (codpes, epflgr, numlgr, cpllgr, nombro, codendptl, codloc, codtiplgr) VALUES 
                                   (convert(int,:codpes),:epflgr,:numlgr,:cpllgr,:nombro,:codendptl,convert(int,:codloc),convert(int,:codtiplgr))";                         

        $data = [
            'codpes' => 114478,
            'epflgr' => 'Bosque',
            'numlgr' => 8,
            'cpllgr' => 'A22',
            'nombro' => 'Centro',
            'codendptl' => '09910370',
            'codloc' => 6,
            'codtiplgr' => 39
        ];
        DB::getInstance()->prepare($sql)->execute($data);

        $sql = "INSERT INTO LOCALIDADE (codloc, cidloc, sglest) 
                VALUES (
                    convert(int,:codloc),
                    :cidloc,
                    :sglest
                )";                         

        $data = [
            'codloc' => 6,
            'cidloc' => 'Diadema',
            'sglest' => 'SP'
        ];
        DB::getInstance()->prepare($sql)->execute($data);

        $sql = "INSERT INTO TIPOLOGRADOURO (nomtiplgr, codtiplgr) 
                VALUES (
                    :nomtiplgr,
                    convert(int,:codtiplgr)
                )";                         

        $data = [
            'nomtiplgr' => 'Rua',
            'codtiplgr' => 39
        ];
        DB::getInstance()->prepare($sql)->execute($data);

        # esta pessoa não existe
        $this->assertSame(false,Pessoa::obterEndereco(111111));

        $data = [
            'nomtiplgr' => 'Rua',
            'epflgr' => 'Bosque',
            'numlgr' => '8',
            'cpllgr' => 'A22',
            'nombro' => 'Centro',
            'cidloc' => 'Diadema',
            'sglest' => 'SP',
            'codendptl' => '09910370',
        ];
        $this->assertSame($data,Pessoa::obterEndereco(114478));
    }

    public function test_cracha(){
        //arrumar
        DB::getInstance()->prepare('DELETE FROM CATR_CRACHA')->execute();

        $sql = "INSERT INTO CATR_CRACHA (codpescra) VALUES 
                                   (:codpescra)";                         

        $data = [
            'codpescra' => '123456'
        ];
        DB::getInstance()->prepare($sql)->execute($data);
        $this->assertSame('123456',Pessoa::cracha('123456')['codpescra']);
    }

    public function test_tiposVinculos(){
        DB::getInstance()->prepare('DELETE FROM LOCALIZAPESSOA')->execute();

        $sql = "INSERT INTO LOCALIZAPESSOA (codpes, sitatl, codundclg, tipvin, tipvinext, codfncetr) 
                    VALUES (
                        convert(int,:codpes),
                        :sitatl,
                        convert(int,:codundclg),
                        :tipvin,
                        :tipvinext,
                        convert(int,:codfncetr)
                    )";                         

        $data = [
            'codpes' => 11111,
            'sitatl' => 'A',
            'codundclg' => 1,
            'tipvin' => 'ALUNOGR',
            'tipvinext' => 'Aluno de Graduação',
            'codfncetr' => 0
        ];
        DB::getInstance()->prepare($sql)->execute($data);
        $this->assertSame([["tipvinext" => 'Aluno de Graduação']],Pessoa::tiposVinculos(1));
    }

    public function test_dump(){
        
        DB::getInstance()->prepare('DELETE FROM PESSOA')->execute();

        $sql = "INSERT INTO PESSOA (codpes, nompes, dtanas) 
                VALUES (convert(int,:codpes), :nompes,:dtanas)";
        $data = [
            'codpes' => 123456, 
            'nompes'=>'Fulano de Teste',
            'dtanas' => '2006-10-05 00:00:00'
        ];
        DB::getInstance()->prepare($sql)->execute($data);

        $this->assertSame('123456',Pessoa::dump(123456)['codpes']);
        $this->assertSame(false,Pessoa::dump(111111));
    }

    public function test_estagiarios(){
        DB::getInstance()->prepare('DELETE FROM LOCALIZAPESSOA')->execute();
        DB::getInstance()->prepare('DELETE FROM PESSOA')->execute();

        $sql = "INSERT INTO LOCALIZAPESSOA (codpes, tipvin, codundclg, sitatl, codfncetr) 
                VALUES (
                    convert(int,:codpes),
                    :tipvin,
                    convert(int,:codundclg),
                    :sitatl,
                    convert(int,:codfncetr)
                )";

        $data = [
            'codpes' => 145368,
            'tipvin' => 'ESTAGIARIORH',
            'codundclg' => 2,
            'sitatl' => 'A',
            'codfncetr' => 0
        ];
        DB::getInstance()->prepare($sql)->execute($data);

        $sql = "INSERT INTO PESSOA (codpes, nompes, dtanas) 
                VALUES (
                    convert(int,:codpes),
                    :nompes,
                    :dtanas
                )";

        $data = [
            'codpes' => 145368,
            'nompes' => 'Rita',
            'dtanas' => '2010-04-05 00:00:00'
        ];
        DB::getInstance()->prepare($sql)->execute($data);

        $this->assertSame('145368',Pessoa::estagiarios(2)[0]['codpes']);        
    }

    public function test_servidores(){
        DB::getInstance()->prepare('DELETE FROM LOCALIZAPESSOA')->execute();
        DB::getInstance()->prepare('DELETE FROM PESSOA')->execute();

        $sql = "INSERT INTO LOCALIZAPESSOA (codpes, tipvinext, codundclg, sitatl, codfncetr) 
                VALUES (
                    convert(int,:codpes),
                    :tipvinext,
                    convert(int,:codundclg),
                    :sitatl,
                    convert(int,:codfncetr)
                )";

        $data = [
            'codpes' => 55555,
            'tipvinext' => 'Servidor',
            'codundclg' => 5,
            'sitatl' => 'A',
            'codfncetr' => 0
        ];
        DB::getInstance()->prepare($sql)->execute($data);

        $sql = "INSERT INTO PESSOA (codpes, nompes, dtanas) 
                VALUES (
                        convert(int,:codpes),
                        :nompes,
                        :dtanas
                )";

        $data = [
            'codpes' => 55555,
            'nompes' => 'Tifany',
            'dtanas' => '2000-10-05 00:00:00'
        ];
        DB::getInstance()->prepare($sql)->execute($data);
        $this->assertSame('55555',Pessoa::servidores(5)[0]['codpes']);        
    }

    public function test_ativosVinculo(){
        DB::getInstance()->prepare('DELETE FROM LOCALIZAPESSOA')->execute();
        DB::getInstance()->prepare('DELETE FROM PESSOA')->execute();

        $sql = "INSERT INTO LOCALIZAPESSOA (codpes, tipvinext, codundclg, sitatl, codfncetr) 
                VALUES (
                    convert(int,:codpes),
                    :tipvinext,
                    convert(int,:codundclg),
                    :sitatl,
                    convert(int,:codfncetr)
                )";

        $data = [
            'codpes' => 99999,
            'tipvinext' => 'Docente Aposentado',
            'codundclg' => 9,
            'sitatl' => 'A',
            'codfncetr' => 0
        ];
        DB::getInstance()->prepare($sql)->execute($data);

        $sql = "INSERT INTO PESSOA (codpes) 
                VALUES (
                        convert(int,:codpes)
                )";

        $data = [
            'codpes' => 99999
        ];
        DB::getInstance()->prepare($sql)->execute($data);
        $this->assertSame([["total" => '0']],Pessoa::ativosVinculo('Docente Aposentado', 9, 1));        
    }

    public function test_nascimento(){
        
        DB::getInstance()->prepare('DELETE FROM PESSOA')->execute();

        $sql = "INSERT INTO PESSOA (codpes, dtanas, nompes) 
                VALUES (
                    convert(int,:codpes),
                    :dtanas,
                    :nompes
                )";
        $data = [
            'codpes' => 454545, 
            'dtanas' => '2018-11-05 00:00:00',
            'nompes' => 'Isaque'
        ];
        DB::getInstance()->prepare($sql)->execute($data);
        $this->assertSame('05/11/2018',Pessoa::nascimento(454545));
    }

    public function test_listarDocentes(){
        DB::getInstance()->prepare('DELETE FROM LOCALIZAPESSOA')->execute();
        DB::getInstance()->prepare('DELETE FROM PESSOA')->execute();

        $sql = "INSERT INTO LOCALIZAPESSOA (codpes, tipvinext, codundclg, sitatl, codset, codfncetr) 
                VALUES (
                    convert(int,:codpes),
                    :tipvinext,
                    convert(int,:codundclg),
                    :sitatl,
                    convert(int,:codset),
                    convert(int,:codfncetr)
                )";

        $data = [
            'codpes' => 101010,
            'tipvinext' => 'Docente',
            'codundclg' => 9,
            'sitatl' => 'A',
            'codset' => 598,
            'codfncetr' => 0
        ];
        DB::getInstance()->prepare($sql)->execute($data);

        $sql = "INSERT INTO PESSOA (codpes, nompes, nompesttd, dtanas) 
                VALUES (
                    convert(int,:codpes),
                    :nompes,
                    :nompesttd,
                    :dtanas
                )";

        $data = [
            'codpes' => 101010,
            'nompes' => 'Fredie',
            'nompesttd' => 'Fredie Silva',
            'dtanas' => '1990-11-05 00:00:00'
        ];
        
        DB::getInstance()->prepare($sql)->execute($data);
        $this->assertSame([],Pessoa::listarDocentes(598));        
    }

    public function test_vinculosSetores(){
        DB::getInstance()->prepare('DELETE FROM LOCALIZAPESSOA')->execute();

        $sql = "INSERT INTO LOCALIZAPESSOA (codpes, tipvinext, tipvin, codundclg, sitatl, codset, codfncetr, nomabvset) 
                VALUES (
                    convert(int,:codpes),
                    :tipvinext,
                    :tipvin,
                    convert(int,:codundclg),
                    :sitatl,
                    convert(int,:codset),
                    convert(int,:codfncetr),
                    :nomabvset
                )";

        $data = [
            'codpes' => 10101,
            'tipvinext' => 'Estagiário',
            'tipvin' => 'ESTAGIARIORH',
            'codundclg' => 9,
            'sitatl' => 'A',
            'codset' => 598,
            'codfncetr' => 0,
            'nomabvset' => 'FFLCH'
        ];
        DB::getInstance()->prepare($sql)->execute($data);
        $this->assertSame([0 => 'Estagiário', 1 => 'Estagiário FFLCH', 2 => 'FFLCH'],Pessoa::vinculosSetores(10101, 9));        
    }

    public function test_listarDocentesAposentadosSenior(){
        DB::getInstance()->prepare('DELETE FROM LOCALIZAPESSOA')->execute();
        DB::getInstance()->prepare('DELETE FROM VINCSATPROFSENIOR')->execute();

        $sql = "INSERT INTO LOCALIZAPESSOA (codpes, tipvinext, sitatl, codset, codfncetr, nompes) 
                VALUES (
                    convert(int,:codpes),
                    :tipvinext,
                    :sitatl,
                    convert(int,:codset),
                    convert(int,:codfncetr),
                    :nompes
                )";

        $data = [
            'codpes' => 98958989,
            'tipvinext' => 'Docente Aposentado',
            'sitatl' => 'P',
            'codset' => 666,
            'codfncetr' => 0,
            'nompes' => 'Maria'
        ];
        DB::getInstance()->prepare($sql)->execute($data);

        $sql = "INSERT INTO VINCSATPROFSENIOR (codpes, codund, dtafimcbd) 
                VALUES (
                    convert(int,:codpes),
                    convert(int,:codund),
                    :dtafimcbd
                )";

        $data = [
            'codpes' => 98958989,
            'codund' => 8,
            'dtafimcbd' => '2024-11-05 00:00:00',
        ];
        
        DB::getInstance()->prepare($sql)->execute($data);
        $this->assertSame([
            0 => Array(
                'codpes' => '98958989',
                'tipvin' => '',
                'tipvinext' => 'Docente Aposentado',
                'nompes' => 'Maria',
                'sitatl' => 'P',
                'nomfnc' => '',
                'codundclg' => '',
                'numtelfmt' => '',
                'sglclgund' => '',
                'codset' => '666',
                'nomabvset' => '',
                'nomset' => '',
                'codema' => '',
                'tipdsg' => '',
                'nompesfon' => '',
                'codfncetr' => '0',
                'codund' => '8',
                'dtafimcbd' => '2024-11-05 00:00:00'
        )],Pessoa::listarDocentesAposentadosSenior());   
    }
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:23:"\Uspdev\Replicado\Tests";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:23:"\Uspdev\Replicado\Tests";s:36:" phpDocumentor\Reflection\Fqsen name";s:5:"Tests";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:34:"\Uspdev\Replicado\Tests\PessoaTest";O:35:"phpDocumentor\Reflection\Php\Class_":11:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:34:"\Uspdev\Replicado\Tests\PessoaTest";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"PessoaTest";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";N;s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\PHPUnit\Framework\TestCase";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"TestCase";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:0:{}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:27:{s:55:"\Uspdev\Replicado\Tests\PessoaTest::test_nomeCompleto()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:55:"\Uspdev\Replicado\Tests\PessoaTest::test_nomeCompleto()";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"test_nomeCompleto";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:12;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:62:"\Uspdev\Replicado\Tests\PessoaTest::test_obterCodpesPorEmail()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:62:"\Uspdev\Replicado\Tests\PessoaTest::test_obterCodpesPorEmail()";s:36:" phpDocumentor\Reflection\Fqsen name";s:24:"test_obterCodpesPorEmail";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:22;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:62:"\Uspdev\Replicado\Tests\PessoaTest::test_verificarEstagioUSP()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:62:"\Uspdev\Replicado\Tests\PessoaTest::test_verificarEstagioUSP()";s:36:" phpDocumentor\Reflection\Fqsen name";s:24:"test_verificarEstagioUSP";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:29;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:48:"\Uspdev\Replicado\Tests\PessoaTest::test_email()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:48:"\Uspdev\Replicado\Tests\PessoaTest::test_email()";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"test_email";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:44;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:51:"\Uspdev\Replicado\Tests\PessoaTest::test_emailusp()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:51:"\Uspdev\Replicado\Tests\PessoaTest::test_emailusp()";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"test_emailusp";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:59;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:49:"\Uspdev\Replicado\Tests\PessoaTest::test_emails()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:49:"\Uspdev\Replicado\Tests\PessoaTest::test_emails()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"test_emails";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:74;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:52:"\Uspdev\Replicado\Tests\PessoaTest::test_telefones()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:52:"\Uspdev\Replicado\Tests\PessoaTest::test_telefones()";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"test_telefones";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:90;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:47:"\Uspdev\Replicado\Tests\PessoaTest::test_nome()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:47:"\Uspdev\Replicado\Tests\PessoaTest::test_nome()";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"test_nome";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:109;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:55:"\Uspdev\Replicado\Tests\PessoaTest::test_nomeFonetico()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:55:"\Uspdev\Replicado\Tests\PessoaTest::test_nomeFonetico()";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"test_nomeFonetico";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:132;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:58:"\Uspdev\Replicado\Tests\PessoaTest::test_procurarPorNome()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:58:"\Uspdev\Replicado\Tests\PessoaTest::test_procurarPorNome()";s:36:" phpDocumentor\Reflection\Fqsen name";s:20:"test_procurarPorNome";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:157;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:56:"\Uspdev\Replicado\Tests\PessoaTest::test_obterRamalUsp()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:56:"\Uspdev\Replicado\Tests\PessoaTest::test_obterRamalUsp()";s:36:" phpDocumentor\Reflection\Fqsen name";s:18:"test_obterRamalUsp";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:217;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:51:"\Uspdev\Replicado\Tests\PessoaTest::test_vinculos()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:51:"\Uspdev\Replicado\Tests\PessoaTest::test_vinculos()";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"test_vinculos";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:237;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:57:"\Uspdev\Replicado\Tests\PessoaTest::test_vinculosSiglas()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:57:"\Uspdev\Replicado\Tests\PessoaTest::test_vinculosSiglas()";s:36:" phpDocumentor\Reflection\Fqsen name";s:19:"test_vinculosSiglas";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:264;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:75:"\Uspdev\Replicado\Tests\PessoaTest::test_contarEstagiariosAtivosPorGenero()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:75:"\Uspdev\Replicado\Tests\PessoaTest::test_contarEstagiariosAtivosPorGenero()";s:36:" phpDocumentor\Reflection\Fqsen name";s:37:"test_contarEstagiariosAtivosPorGenero";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:287;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:74:"\Uspdev\Replicado\Tests\PessoaTest::test_contarServidoresAtivosPorGenero()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:74:"\Uspdev\Replicado\Tests\PessoaTest::test_contarServidoresAtivosPorGenero()";s:36:" phpDocumentor\Reflection\Fqsen name";s:36:"test_contarServidoresAtivosPorGenero";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:318;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:64:"\Uspdev\Replicado\Tests\PessoaTest::test_totalPosNivelPrograma()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:64:"\Uspdev\Replicado\Tests\PessoaTest::test_totalPosNivelPrograma()";s:36:" phpDocumentor\Reflection\Fqsen name";s:26:"test_totalPosNivelPrograma";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:349;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:56:"\Uspdev\Replicado\Tests\PessoaTest::test_obterEndereco()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:56:"\Uspdev\Replicado\Tests\PessoaTest::test_obterEndereco()";s:36:" phpDocumentor\Reflection\Fqsen name";s:18:"test_obterEndereco";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:387;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:49:"\Uspdev\Replicado\Tests\PessoaTest::test_cracha()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:49:"\Uspdev\Replicado\Tests\PessoaTest::test_cracha()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"test_cracha";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:449;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:56:"\Uspdev\Replicado\Tests\PessoaTest::test_tiposVinculos()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:56:"\Uspdev\Replicado\Tests\PessoaTest::test_tiposVinculos()";s:36:" phpDocumentor\Reflection\Fqsen name";s:18:"test_tiposVinculos";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:463;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:47:"\Uspdev\Replicado\Tests\PessoaTest::test_dump()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:47:"\Uspdev\Replicado\Tests\PessoaTest::test_dump()";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"test_dump";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:488;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:54:"\Uspdev\Replicado\Tests\PessoaTest::test_estagiarios()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:54:"\Uspdev\Replicado\Tests\PessoaTest::test_estagiarios()";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"test_estagiarios";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:505;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:53:"\Uspdev\Replicado\Tests\PessoaTest::test_servidores()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:53:"\Uspdev\Replicado\Tests\PessoaTest::test_servidores()";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"test_servidores";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:544;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:56:"\Uspdev\Replicado\Tests\PessoaTest::test_ativosVinculo()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:56:"\Uspdev\Replicado\Tests\PessoaTest::test_ativosVinculo()";s:36:" phpDocumentor\Reflection\Fqsen name";s:18:"test_ativosVinculo";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:582;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:53:"\Uspdev\Replicado\Tests\PessoaTest::test_nascimento()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:53:"\Uspdev\Replicado\Tests\PessoaTest::test_nascimento()";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"test_nascimento";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:616;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:57:"\Uspdev\Replicado\Tests\PessoaTest::test_listarDocentes()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:57:"\Uspdev\Replicado\Tests\PessoaTest::test_listarDocentes()";s:36:" phpDocumentor\Reflection\Fqsen name";s:19:"test_listarDocentes";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:635;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:58:"\Uspdev\Replicado\Tests\PessoaTest::test_vinculosSetores()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:58:"\Uspdev\Replicado\Tests\PessoaTest::test_vinculosSetores()";s:36:" phpDocumentor\Reflection\Fqsen name";s:20:"test_vinculosSetores";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:678;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:74:"\Uspdev\Replicado\Tests\PessoaTest::test_listarDocentesAposentadosSenior()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:74:"\Uspdev\Replicado\Tests\PessoaTest::test_listarDocentesAposentadosSenior()";s:36:" phpDocumentor\Reflection\Fqsen name";s:36:"test_listarDocentesAposentadosSenior";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:707;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:10;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";