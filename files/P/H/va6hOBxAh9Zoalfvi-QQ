1648104966
ijeqzL8hUX%3A820f70abaafc71797de664c2d45c28a0-8d891f51e8251c6bef8c59f8535ed648
s:16500:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"8d891f51e8251c6bef8c59f8535ed648";s:39:" phpDocumentor\Reflection\Php\File name";s:17:"EstruturaTest.php";s:39:" phpDocumentor\Reflection\Php\File path";s:23:"tests/EstruturaTest.php";s:41:" phpDocumentor\Reflection\Php\File source";s:7783:"<?php

namespace Uspdev\Replicado\Tests;

use PHPUnit\Framework\TestCase;
use Uspdev\Replicado\Estrutura;
use Uspdev\Replicado\DB;

class EstruturaTest extends TestCase
{
    public function test_listarSetores(){
        # Limpando Tabela
        DB::getInstance()->prepare('DELETE FROM SETOR')->execute();
        
        $codund = getenv('TEST_SYBASE_CODUNDCLG');
        
        $sql = "INSERT INTO SETOR (codset, tipset, nomabvset, nomset, codsetspe, codund) VALUES 
                (convert(int,:codset), :tipset, :nomabvset, :nomset, convert(int,:codsetspe), convert(int, $codund))";

        $datas = [
            [
                'codset' => '1',
                'tipset' => 'Unidade',
                'nomabvset' => 'UND',
                'nomset' => 'Diretoria da Unidade',
                'codsetspe' => '0'
            ],
            [
                'codset' => '2',
                'tipset' => 'Departamento de Ensino',
                'nomabvset' => 'DPTO1',
                'nomset' => 'Departamento1',                
                'codsetspe' => '1'
            ],
            [
                'codset' => '3',
                'tipset' => 'Departamento de Ensino',
                'nomabvset' => 'DPTO2',
                'nomset' => 'Departamento2',
                'codsetspe' => '1'
            ],
            [
                'codset' => '4',
                'tipset' => 'Seção Técnica',
                'nomabvset' => 'STI',
                'nomset' => 'Seção Técnica de Informática',
                'codsetspe' => '1'                
            ],
            [
                'codset' => '5',
                'tipset' => 'Seção Técnica',
                'nomabvset' => 'SI-DPTO1',
                'nomset' => 'Seção de Informática',
                'codsetspe' => '2'                
            ]
        ];

        foreach ($datas as $data) {
            DB::getInstance()->prepare($sql)->execute($data);
        }
        
        $this->assertSame($datas,Estrutura::listarSetores());
    }

    public function test_getChefiaSetor()
    {
        # Limpando Tabela
        DB::getInstance()->prepare('DELETE FROM SETOR')->execute();
        DB::getInstance()->prepare('DELETE FROM LOCALIZAPESSOA')->execute();

        $codund = getenv('TEST_SYBASE_CODUNDCLG');

        $sql_setor = "INSERT INTO SETOR (codset, tipset, nomabvset, nomset, codsetspe, codund) VALUES 
                (convert(int,:codset), :tipset, :nomabvset, :nomset, convert(int,:codsetspe), convert(int, $codund))";

        $data_setores = [
            [
                'codset' => '1',
                'tipset' => 'Unidade',
                'nomabvset' => 'UND',
                'nomset' => 'Diretoria da Unidade',
                'codsetspe' => '0'
            ],
            [
                'codset' => '2',
                'tipset' => 'Departamento de Ensino',
                'nomabvset' => 'DPTO1',
                'nomset' => 'Departamento1',                
                'codsetspe' => '1'
            ],
            [
                'codset' => '3',
                'tipset' => 'Departamento de Ensino',
                'nomabvset' => 'DPTO2',
                'nomset' => 'Departamento2',
                'codsetspe' => '1'
            ],
            [
                'codset' => '4',
                'tipset' => 'Seção Técnica',
                'nomabvset' => 'STI',
                'nomset' => 'Seção Técnica de Informática',
                'codsetspe' => '1'                
            ],
            [
                'codset' => '5',
                'tipset' => 'Seção Técnica',
                'nomabvset' => 'SI-DPTO1',
                'nomset' => 'Seção de Informática',
                'codsetspe' => '2'                
            ]
        ];

        foreach ($data_setores as $data_setor) {
            DB::getInstance()->prepare($sql_setor)->execute($data_setor);
        }

        $sql_pessoa = "INSERT INTO LOCALIZAPESSOA (codpes, nompes, nomfnc, codset, tipvinext, tipdsg, codfncetr) VALUES 
                (convert(int,:codpes), :nompes, :nomfnc, convert(int,:codset), :tipvinext, :tipdsg, convert(int,:codfncetr))";

        $data_pessoas = [
            [
                'codpes' => 1234,
                'nompes' => 'Fulano de Tal',
                'nomfnc' => 'Diretor',
                'codset' => 1,
                'tipvinext' => 'Servidor Designado',
                'tipdsg' => 'D',
                'codfncetr' => 0
            ],
            [
                'codpes' => 56789,
                'nompes' => 'Beltrano de Tal',
                'nomfnc' => 'Chefe Adm Serviço',
                'codset' => 2,
                'tipvinext' => 'Servidor Designado',
                'tipdsg' => 'D',
                'codfncetr' => 0
            ],
            [
                'codpes' => 101112,
                'nompes' => 'Fulano da Silva',
                'nomfnc' => 'Chefe de Seção',
                'codset' => 2,
                'tipvinext' => 'Servidor Designado',
                'tipdsg' => 'S',
                'codfncetr' => 0
            ],
            [
                'codpes' => 131415,
                'nompes' => 'Maria Mariana',
                'nomfnc' => 'Chefe',
                'codset' => 4,
                'tipvinext' => 'Servidor Designado',
                'tipdsg' => 'D',
                'codfncetr' => 0
            ],
            [
                'codpes' => 161718,
                'nompes' => 'João de Tal',
                'nomfnc' => 'Vice Chefe',
                'codset' => 1,
                'tipvinext' => 'Servidor Designado',
                'tipdsg' => 'D',
                'codfncetr' => 0
            ]
        ];

        foreach ($data_pessoas as $data_pessoa) {
            DB::getInstance()->prepare($sql_pessoa)->execute($data_pessoa);
        }

        $teste = [
            [
                [
                    'codpes' => '161718',
                    'nompes' => 'João de Tal',
                    'nomfnc' => 'Vice Chefe',
                    'codsetspe' => '0',
                    'nomabvset' => 'UND',
                    'nomset' => 'Diretoria da Unidade',
                ],
                [
                    'codpes' => '1234',
                    'nompes' => 'Fulano de Tal',
                    'nomfnc' => 'Diretor',
                    'codsetspe' => '0',
                    'nomabvset' => 'UND',
                    'nomset' => 'Diretoria da Unidade',
                ]
            ],
            [
                [
                    'codpes' => '56789',
                    'nompes' => 'Beltrano de Tal',
                    'nomfnc' => 'Chefe Adm Serviço',
                    'codsetspe' => '1',
                    'nomabvset' => 'DPTO1',
                    'nomset' => 'Departamento1',
                ],
                [
                    'codpes' => '101112',
                    'nompes' => 'Fulano da Silva',
                    'nomfnc' => 'Chefe de Seção',
                    'codsetspe' => '1',
                    'nomabvset' => 'DPTO1',
                    'nomset' => 'Departamento1',
                ]
            ],
            [
                [
                    'codpes' => '56789',
                    'nompes' => 'Beltrano de Tal',
                    'nomfnc' => 'Chefe Adm Serviço',
                    'codsetspe' => '1',
                    'nomabvset' => 'DPTO1',
                    'nomset' => 'Departamento1',
                ]
            ]
        ];

        $this->assertSame($teste[0],Estrutura::getChefiaSetor(1));
        $this->assertSame($teste[1],Estrutura::getChefiaSetor(2));
        $this->assertSame($teste[2],Estrutura::getChefiaSetor(2,false));
    }    
}";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:23:"\Uspdev\Replicado\Tests";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:23:"\Uspdev\Replicado\Tests";s:36:" phpDocumentor\Reflection\Fqsen name";s:5:"Tests";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:37:"\Uspdev\Replicado\Tests\EstruturaTest";O:35:"phpDocumentor\Reflection\Php\Class_":11:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:37:"\Uspdev\Replicado\Tests\EstruturaTest";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"EstruturaTest";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";N;s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\PHPUnit\Framework\TestCase";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"TestCase";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:0:{}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:2:{s:59:"\Uspdev\Replicado\Tests\EstruturaTest::test_listarSetores()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:59:"\Uspdev\Replicado\Tests\EstruturaTest::test_listarSetores()";s:36:" phpDocumentor\Reflection\Fqsen name";s:18:"test_listarSetores";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:11;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:60:"\Uspdev\Replicado\Tests\EstruturaTest::test_getChefiaSetor()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:60:"\Uspdev\Replicado\Tests\EstruturaTest::test_getChefiaSetor()";s:36:" phpDocumentor\Reflection\Fqsen name";s:19:"test_getChefiaSetor";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:65;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:9;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";